<?xml version="1.0"?>
<launch>
  <arg name="points_topic" default="rslidar_points" />
  <arg name="points_filtered_topic" default="rslidar_filtered_points" />
  <!-- arguments -->
  <arg name="nodelet_manager" default="nodelet_manager" />

  <arg name="odom_frame_id" default="rbkairos_a_odom" />
  <arg name="map_frame_id" default="rbkairos_a_map" />
  <arg name="base_frame_id" default="rbkairos_a_base_link" /> <!-- is the real robot base frame -->

  <node name="base2lidar" pkg="tf" type="static_transform_publisher" args="0.25 0 0 0 0 0 $(arg base_frame_id) rslidar 100" />

  <!-- in case you use velodyne_driver, comment out the following line -->
  <node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager)" args="manager" output="screen"/>

  <!-- globalmap_server_nodelet -->
  <node pkg="nodelet" type="nodelet" name="globalmap_server_nodelet" args="load hdl_localization/GlobalmapServerNodelet $(arg nodelet_manager)">
    <param name="globalmap_pcd" value="/home/mbosch/rslidar.pcd" />
    <param name="downsample_resolution" value="0.1" />
    <param name="map_frame_id" value="$(arg map_frame_id)" />
  </node>
  
  <!-- prefiltering_nodelet -->
  <node pkg="nodelet" type="nodelet" name="prefiltering_nodelet" args="load hdl_graph_slam/PrefilteringNodelet $(arg nodelet_manager)">
    <remap from="points" to="$(arg points_topic)" />
    <remap from="filtered_points" to="$(arg points_filtered_topic)" />
    <!-- in case base_frame_id is blank, mapping will be performed in the lidar frame -->
    <param name="base_frame_id" value="$(arg base_frame_id)" />
    <!-- distance filter -->
    <param name="use_distance_filter" value="true" />
    <param name="distance_near_thresh" value="0.5" />
    <param name="distance_far_thresh" value="100.0" />
    <!-- NONE, VOXELGRID, or APPROX_VOXELGRID -->
    <param name="downsample_method" value="VOXELGRID" />
    <param name="downsample_resolution" value="0.1" />
    <!-- NONE, RADIUS, or STATISTICAL -->
    <param name="outlier_removal_method" value="RADIUS" />
    <param name="statistical_mean_k" value="30" />
    <param name="statistical_stddev" value="1.2" />
    <param name="radius_radius" value="0.5" />
    <param name="radius_min_neighbors" value="2" />
  </node>
    

    <!-- hdl_localization_nodelet -->
  <node pkg="nodelet" type="nodelet" name="hdl_localization_nodelet" args="load hdl_localization/HdlLocalizationNodelet $(arg nodelet_manager)">
    <remap from="points" to="$(arg points_filtered_topic)" />
    <!--<param name="base_frame_id" value="$(arg base_frame_id)" />-->
    <param name="base_frame_id" value="" /> <!-- use empty because filtered cloud is already in required frame -->
    <param name="odom_frame_id" value="$(arg base_frame_id)" /> <!-- we are computing directly from map to base link, not to odom -->
    <param name="map_frame_id"  value="$(arg map_frame_id)" />
    <!-- imu settings -->
    <!-- during "cool_time", imu inputs are ignored -->
    <param name="use_imu" value="false" />
    <param name="invert_imu" value="false" />
    <param name="cool_time_duration" value="2.0" />
    <!-- ndt settings -->
    <!-- if NDT is slow for your PC, try DIRECT1 serach method, which is a bit unstable but extremely fast -->
    <param name="ndt_neighbor_search_method" value="DIRECT7" />
    <param name="ndt_resolution" value="1.0" />
    <param name="downsample_resolution" value="0.1" />
    <!-- if "specify_init_pose" is true, pose estimator will be initialized with the following params -->
    <!-- otherwise, you need to input an initial pose with "2D Pose Estimate" on rviz" -->
    <param name="specify_init_pose" value="true" />
    <!--<param name="init_pos_x" value="0.0" />-->
    <!--<param name="init_pos_y" value="0.0" />-->
    <!--<param name="init_pos_z" value="0.0" />-->
    <!--<param name="init_ori_w" value="1.0" />-->
    <!--<param name="init_ori_x" value="0.0" />-->
    <!--<param name="init_ori_y" value="0.0" />-->
    <!--<param name="init_ori_z" value="0.0" />-->
    <!-- bag robotnik at 235 secs -->
    <!--<param name="init_pos_x" value="-30.54" />-->
    <!--<param name="init_pos_y" value="-4.496" />-->
    <!--<param name="init_pos_z" value="0.487" />-->
    <!--<param name="init_ori_w" value="0.0" />-->
    <!--<param name="init_ori_x" value="0.0" />-->
    <!--<param name="init_ori_y" value="0.0" />-->
    <!--<param name="init_ori_z" value="1.0" />-->
    <!-- bag robotnik at 273 secs -->
    <param name="init_pos_x" value="-23.2" />
    <param name="init_pos_y" value="-5.816" />
    <param name="init_pos_z" value="0.487" />
    <param name="init_ori_w" value="0.989" />
    <param name="init_ori_x" value="0.0" />
    <param name="init_ori_y" value="0.0" />
    <param name="init_ori_z" value="-0.147" />
  </node>

</launch>
